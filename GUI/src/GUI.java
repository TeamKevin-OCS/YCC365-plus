import uk.co.caprica.vlcj.player.component.EmbeddedMediaPlayerComponent;

import javax.imageio.ImageIO;
import javax.swing.*;
import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;

public class GUI extends javax.swing.JFrame {

    private final EmbeddedMediaPlayerComponent mediaPlayerComponent;
    public final String title = "Team Kevin IP Camera Tool";
    public String rtsp_camera;

    public boolean listenState = false;
    public boolean talkState = false;
    public boolean alarmState = false;

    public GUI(Device device) {
        try {
            Telnet.connect(device.getIp(), 23);
        } catch (Exception e){
            e.printStackTrace();
        }

        this.setUndecorated(true);
        this.setResizable(false);
        this.setTitle(title);
        initComponents();
        this.setContentPane(jPanel1);
        labelIP.setText(device.getIp());
        labelMAC.setText(device.getMac());

        FrameDragListener frameDragListener = new FrameDragListener(this);
        this.addMouseListener(frameDragListener);
        this.addMouseMotionListener(frameDragListener);

        this.setLocationRelativeTo(null);

        jPanel1.add(streamPanel);
        jPanel1.add(topPanel);
        jPanel1.add(leftPanel);
        jPanel1.add(controlPanel);
        jPanel1.add(rightPanel);
        jPanel1.add(rightPanel2);
        jPanel1.add(jPanel2);
        jPanel1.add(jPanel3);
        jPanel1.add(infoPanel);
        streamPanel.setLayout(new BorderLayout());
        streamPanel.setBackground(new java.awt.Color(38, 40, 51));
        this.setBackground(new java.awt.Color(38, 40, 51));
        topPanel.setBackground(new java.awt.Color(38, 40, 51));
        leftPanel.setBackground(new java.awt.Color(38, 40, 51));
        controlPanel.setBackground(new java.awt.Color(38, 40, 51));
        rightPanel.setBackground(new java.awt.Color(38, 40, 51));
        rightPanel2.setBackground(new java.awt.Color(38, 40, 51));
        jPanel1.setBackground(new java.awt.Color(38, 40, 51));
        infoPanel.setBackground(new java.awt.Color(38, 40, 51));

        mediaPlayerComponent = new EmbeddedMediaPlayerComponent();
        streamPanel.add(mediaPlayerComponent, BorderLayout.CENTER);
        streamPanel.setVisible(true);

        rtsp_camera = "rtsp://" + device.getIp() + "//live/ch00_1";

        mediaPlayerComponent.mediaPlayer().media().play(rtsp_camera);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        topPanel = new javax.swing.JPanel();
        rightPanel = new javax.swing.JPanel();
        leftPanel = new javax.swing.JPanel();
        streamPanel = new javax.swing.JPanel();
        controlPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        toolName1 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        labelIP = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        labelMAC = new javax.swing.JLabel();
        refreshButton = new javax.swing.JLabel();
        switchCameraButton = new javax.swing.JLabel();
        upButton = new javax.swing.JLabel();
        leftButton = new javax.swing.JLabel();
        downButton = new javax.swing.JLabel();
        rightButton = new javax.swing.JLabel();
        listenButton = new javax.swing.JLabel();
        speakButton = new javax.swing.JLabel();
        alarmButton = new javax.swing.JLabel();
        babyButton = new javax.swing.JLabel();
        screenshotButton = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        infoPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        closeButton = new javax.swing.JLabel();
        closeButton1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        rightPanel2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1280, 505));
        setPreferredSize(new java.awt.Dimension(1280, 505));

        jPanel1.setBackground(new java.awt.Color(38, 40, 51));

        topPanel.setBackground(new java.awt.Color(38, 40, 51));

        javax.swing.GroupLayout topPanelLayout = new javax.swing.GroupLayout(topPanel);
        topPanel.setLayout(topPanelLayout);
        topPanelLayout.setHorizontalGroup(
                topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 1150, Short.MAX_VALUE)
        );
        topPanelLayout.setVerticalGroup(
                topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 15, Short.MAX_VALUE)
        );

        rightPanel.setBackground(new java.awt.Color(38, 40, 51));

        javax.swing.GroupLayout rightPanelLayout = new javax.swing.GroupLayout(rightPanel);
        rightPanel.setLayout(rightPanelLayout);
        rightPanelLayout.setHorizontalGroup(
                rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 16, Short.MAX_VALUE)
        );
        rightPanelLayout.setVerticalGroup(
                rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 0, Short.MAX_VALUE)
        );

        leftPanel.setBackground(new java.awt.Color(38, 40, 51));

        javax.swing.GroupLayout leftPanelLayout = new javax.swing.GroupLayout(leftPanel);
        leftPanel.setLayout(leftPanelLayout);
        leftPanelLayout.setHorizontalGroup(
                leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 15, Short.MAX_VALUE)
        );
        leftPanelLayout.setVerticalGroup(
                leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 0, Short.MAX_VALUE)
        );

        streamPanel.setBackground(new java.awt.Color(38, 40, 51));

        javax.swing.GroupLayout streamPanelLayout = new javax.swing.GroupLayout(streamPanel);
        streamPanel.setLayout(streamPanelLayout);
        streamPanelLayout.setHorizontalGroup(
                streamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 0, Short.MAX_VALUE)
        );
        streamPanelLayout.setVerticalGroup(
                streamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 456, Short.MAX_VALUE)
        );

        controlPanel.setBackground(new java.awt.Color(38, 40, 51));

        jLabel4.setFont(new java.awt.Font("Montserrat", 1, 10)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("CAMERA MOVEMENT");

        jLabel5.setFont(new java.awt.Font("Montserrat", 1, 10)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("COMMUNICATION");

        toolName1.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        toolName1.setForeground(new java.awt.Color(255, 255, 255));
        toolName1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        toolName1.setText(title);
        toolName1.setInheritsPopupMenu(false);

        jLabel1.setFont(new java.awt.Font("Montserrat", 1, 10)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("CAMERA INFORMATION");

        jLabel2.setFont(new java.awt.Font("Montserrat", 0, 10)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("IP Adres");

        labelIP.setFont(new java.awt.Font("Montserrat", 0, 10)); // NOI18N
        labelIP.setForeground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Montserrat", 0, 10)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("MAC Adres");

        labelMAC.setFont(new java.awt.Font("Montserrat", 0, 10)); // NOI18N
        labelMAC.setForeground(new java.awt.Color(255, 255, 255));

        refreshButton.setBackground(new java.awt.Color(63, 114, 155));
        refreshButton.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        refreshButton.setForeground(new java.awt.Color(255, 255, 255));
        refreshButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        refreshButton.setText("REFRESH");
        refreshButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        refreshButton.setOpaque(true);
//        refreshButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
////            public void mouseDragged(java.awt.event.MouseEvent evt) {
////                refreshButtonMouseDragged(evt);
////            }
//        });
        refreshButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                refreshButtonMouseClicked(evt);
            }

            public void mouseEntered(java.awt.event.MouseEvent evt) {
                refreshButtonMouseEntered(evt);
            }

            public void mouseExited(java.awt.event.MouseEvent evt) {
                refreshButtonMouseExited(evt);
            }
        });

        switchCameraButton.setBackground(new java.awt.Color(63, 114, 155));
        switchCameraButton.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        switchCameraButton.setForeground(new java.awt.Color(255, 255, 255));
        switchCameraButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        switchCameraButton.setText("SWITCH CAMERA");
        switchCameraButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        switchCameraButton.setOpaque(true);
//        switchCameraButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
////            public void mouseDragged(java.awt.event.MouseEvent evt) {
////                switchCameraButtonMouseDragged(evt);
////            }
//        });
        switchCameraButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                switchCameraButtonMouseClicked(evt);
            }

            public void mouseEntered(java.awt.event.MouseEvent evt) {
                switchCameraButtonMouseEntered(evt);
            }

            public void mouseExited(java.awt.event.MouseEvent evt) {
                switchCameraButtonMouseExited(evt);
            }
        });

        upButton.setBackground(new java.awt.Color(63, 114, 155));
        upButton.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        upButton.setForeground(new java.awt.Color(255, 255, 255));
        upButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        upButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/move-up-white.png"))); // NOI18N
        upButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        upButton.setOpaque(true);
//        upButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
//            public void mouseDragged(java.awt.event.MouseEvent evt) {
//                upButtonMouseDragged(evt);
//            }
//        });
        upButton.addMouseListener(new java.awt.event.MouseAdapter() {
//            public void mouseClicked(java.awt.event.MouseEvent evt) {
//                upButtonMouseClicked(evt);
//            }

            public void mouseEntered(java.awt.event.MouseEvent evt) {
                upButtonMouseEntered(evt);
            }

            public void mouseExited(java.awt.event.MouseEvent evt) {
                upButtonMouseExited(evt);
            }

            public void mousePressed(java.awt.event.MouseEvent evt) {
                upButtonMousePressed(evt);
            }

            public void mouseReleased(java.awt.event.MouseEvent evt) {
                upButtonMouseReleased(evt);
            }
        });

        leftButton.setBackground(new java.awt.Color(63, 114, 155));
        leftButton.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        leftButton.setForeground(new java.awt.Color(255, 255, 255));
        leftButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        leftButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/move-left-white.png"))); // NOI18N
        leftButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        leftButton.setOpaque(true);
//        leftButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
//            public void mouseDragged(java.awt.event.MouseEvent evt) {
//                leftButtonMouseDragged(evt);
//            }
//        });
        leftButton.addMouseListener(new java.awt.event.MouseAdapter() {
//            public void mouseClicked(java.awt.event.MouseEvent evt) {
//                leftButtonMouseClicked(evt);
//            }

            public void mouseEntered(java.awt.event.MouseEvent evt) {
                leftButtonMouseEntered(evt);
            }

            public void mouseExited(java.awt.event.MouseEvent evt) {
                leftButtonMouseExited(evt);
            }

            public void mousePressed(java.awt.event.MouseEvent evt) {
                leftButtonMousePressed(evt);
            }

            public void mouseReleased(java.awt.event.MouseEvent evt) {
                leftButtonMouseReleased(evt);
            }

        });

        downButton.setBackground(new java.awt.Color(63, 114, 155));
        downButton.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        downButton.setForeground(new java.awt.Color(255, 255, 255));
        downButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        downButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/move-down-white.png"))); // NOI18N
        downButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        downButton.setOpaque(true);
//        downButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
//            public void mouseDragged(java.awt.event.MouseEvent evt) {
//                downButtonMouseDragged(evt);
//            }
//        });
        downButton.addMouseListener(new java.awt.event.MouseAdapter() {
//            public void mouseClicked(java.awt.event.MouseEvent evt) {
//                downButtonMouseClicked(evt);
//            }

            public void mouseEntered(java.awt.event.MouseEvent evt) {
                downButtonMouseEntered(evt);
            }

            public void mouseExited(java.awt.event.MouseEvent evt) {
                downButtonMouseExited(evt);
            }

            public void mousePressed(java.awt.event.MouseEvent evt) {
                downButtonMousePressed(evt);
            }

            public void mouseReleased(java.awt.event.MouseEvent evt) {
                downButtonMouseReleased(evt);
            }
        });

        rightButton.setBackground(new java.awt.Color(63, 114, 155));
        rightButton.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        rightButton.setForeground(new java.awt.Color(255, 255, 255));
        rightButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rightButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/move-right-white.png"))); // NOI18N
        rightButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        rightButton.setOpaque(true);
//        rightButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
//            public void mouseDragged(java.awt.event.MouseEvent evt) {
//                rightButtonMouseDragged(evt);
//            }
//        });
        rightButton.addMouseListener(new java.awt.event.MouseAdapter() {
//            public void mouseClicked(java.awt.event.MouseEvent evt) {
//                rightButtonMouseClicked(evt);
//            }

            public void mouseEntered(java.awt.event.MouseEvent evt) {
                rightButtonMouseEntered(evt);
            }

            public void mouseExited(java.awt.event.MouseEvent evt) {
                rightButtonMouseExited(evt);
            }

            public void mousePressed(java.awt.event.MouseEvent evt) {
                rightButtonMousePressed(evt);
            }

            public void mouseReleased(java.awt.event.MouseEvent evt) {
                rightButtonMouseReleased(evt);
            }
        });

        listenButton.setBackground(new java.awt.Color(63, 114, 155));
        listenButton.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        listenButton.setForeground(new java.awt.Color(255, 255, 255));
        listenButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        listenButton.setText("LISTEN: OFF");
        listenButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        listenButton.setOpaque(true);
//        listenButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
//            public void mouseDragged(java.awt.event.MouseEvent evt) {
//                listenButtonMouseDragged(evt);
//            }
//        });
        listenButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listenButtonMouseClicked(evt);
            }

            public void mouseEntered(java.awt.event.MouseEvent evt) {
                listenButtonMouseEntered(evt);
            }

            public void mouseExited(java.awt.event.MouseEvent evt) {
                listenButtonMouseExited(evt);
            }
        });

        speakButton.setBackground(new java.awt.Color(63, 114, 155));
        speakButton.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        speakButton.setForeground(new java.awt.Color(255, 255, 255));
        speakButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        speakButton.setText("SPEAK: OFF");
        speakButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        speakButton.setOpaque(true);
//        speakButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
//            public void mouseDragged(java.awt.event.MouseEvent evt) {
//                speakButtonMouseDragged(evt);
//            }
//        });
        speakButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                speakButtonMouseClicked(evt);
            }

            public void mouseEntered(java.awt.event.MouseEvent evt) {
                speakButtonMouseEntered(evt);
            }

            public void mouseExited(java.awt.event.MouseEvent evt) {
                speakButtonMouseExited(evt);
            }
        });

        alarmButton.setBackground(new java.awt.Color(63, 114, 155));
        alarmButton.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        alarmButton.setForeground(new java.awt.Color(255, 255, 255));
        alarmButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        alarmButton.setText("ALARM: OFF");
        alarmButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        alarmButton.setOpaque(true);
//        alarmButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
//            public void mouseDragged(java.awt.event.MouseEvent evt) {
//                alarmButtonMouseDragged(evt);
//            }
//        });
        alarmButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                alarmButtonMouseClicked(evt);
            }

            public void mouseEntered(java.awt.event.MouseEvent evt) {
                alarmButtonMouseEntered(evt);
            }

            public void mouseExited(java.awt.event.MouseEvent evt) {
                alarmButtonMouseExited(evt);
            }
        });

        babyButton.setBackground(new java.awt.Color(63, 114, 155));
        babyButton.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        babyButton.setForeground(new java.awt.Color(255, 255, 255));
        babyButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        babyButton.setText("BABY SOUNDS");
        babyButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        babyButton.setOpaque(true);
//        babyButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
//            public void mouseDragged(java.awt.event.MouseEvent evt) {
//                babyButtonMouseDragged(evt);
//            }
//        });
        babyButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                babyButtonMouseClicked(evt);
            }

            public void mouseEntered(java.awt.event.MouseEvent evt) {
                babyButtonMouseEntered(evt);
            }

            public void mouseExited(java.awt.event.MouseEvent evt) {
                babyButtonMouseExited(evt);
            }
        });

        screenshotButton.setBackground(new java.awt.Color(63, 114, 155));
        screenshotButton.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        screenshotButton.setForeground(new java.awt.Color(255, 255, 255));
        screenshotButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        screenshotButton.setText("SCREENSHOT");
        screenshotButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        screenshotButton.setOpaque(true);
//        screenshotButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
//            public void mouseDragged(java.awt.event.MouseEvent evt) {
//                screenshotButtonMouseDragged(evt);
//            }
//        });
        screenshotButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                screenshotButtonMouseClicked(evt);
            }

            public void mouseEntered(java.awt.event.MouseEvent evt) {
                screenshotButtonMouseEntered(evt);
            }

            public void mouseExited(java.awt.event.MouseEvent evt) {
                screenshotButtonMouseExited(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Montserrat", 1, 10)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("MISCELLANEOUS");

        javax.swing.GroupLayout controlPanelLayout = new javax.swing.GroupLayout(controlPanel);
        controlPanel.setLayout(controlPanelLayout);
        controlPanelLayout.setHorizontalGroup(
                controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(controlPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, controlPanelLayout.createSequentialGroup()
                                                .addComponent(refreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(switchCameraButton, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addContainerGap())
                                        .addGroup(controlPanelLayout.createSequentialGroup()
                                                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, controlPanelLayout.createSequentialGroup()
                                                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, controlPanelLayout.createSequentialGroup()
                                                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(6, 6, 6)
                                                                .addComponent(labelIP, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(labelMAC, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, controlPanelLayout.createSequentialGroup()
                                                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(54, 54, 54)
                                                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(0, 0, Short.MAX_VALUE))
                                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, controlPanelLayout.createSequentialGroup()
                                                                .addComponent(babyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(screenshotButton, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addContainerGap())
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, controlPanelLayout.createSequentialGroup()
                                                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(speakButton, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(listenButton, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(alarmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(upButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(downButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(controlPanelLayout.createSequentialGroup()
                                                                .addComponent(leftButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(49, 49, 49)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(rightButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(32, 32, 32))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, controlPanelLayout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(toolName1, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        controlPanelLayout.setVerticalGroup(
                controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(controlPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(upButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(listenButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(leftButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(rightButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(speakButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(downButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(alarmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(babyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(screenshotButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(labelMAC, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(labelIP, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(switchCameraButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(refreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(13, 13, 13)
                                .addComponent(toolName1)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        refreshButton.getAccessibleContext().setAccessibleName("");
        switchCameraButton.getAccessibleContext().setAccessibleName("");

        infoPanel.setBackground(new java.awt.Color(38, 40, 51));

        javax.swing.GroupLayout infoPanelLayout = new javax.swing.GroupLayout(infoPanel);
        infoPanel.setLayout(infoPanelLayout);
        infoPanelLayout.setHorizontalGroup(
                infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 825, Short.MAX_VALUE)
        );
        infoPanelLayout.setVerticalGroup(
                infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 16, Short.MAX_VALUE)
        );

        jPanel2.setBackground(new java.awt.Color(38, 40, 51));

        closeButton.setBackground(new java.awt.Color(207, 0, 15));
        closeButton.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        closeButton.setForeground(new java.awt.Color(255, 255, 255));
        closeButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        closeButton.setText("X");
        closeButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        closeButton.setOpaque(true);
//        closeButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
//            public void mouseDragged(java.awt.event.MouseEvent evt) {
//                closeButtonMouseDragged(evt);
//            }
//        });
        closeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                closeButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                closeButtonMouseExited(evt);
            }
        });

        closeButton1.setBackground(new java.awt.Color(63, 114, 155));
//        closeButton1.setBackground(new java.awt.Color(207, 0, 15));
        closeButton1.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        closeButton1.setForeground(new java.awt.Color(255, 255, 255));
        closeButton1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        closeButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/window-minimize.png"))); // NOI18N
//        closeButton1.setText("-");
        closeButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        closeButton1.setOpaque(true);
//        closeButton1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
//            public void mouseDragged(java.awt.event.MouseEvent evt) {
//                closeButton1MouseDragged(evt);
//            }
//        });
        closeButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeButton1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                closeButton1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                closeButton1MouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGap(0, 32, Short.MAX_VALUE)
                                .addComponent(closeButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
//                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                                .addGap(0, 2, Short.MAX_VALUE)
                                .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(closeButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 38, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(38, 40, 51));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 298, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 0, Short.MAX_VALUE)
        );

        rightPanel2.setBackground(new java.awt.Color(38, 40, 51));

        javax.swing.GroupLayout rightPanel2Layout = new javax.swing.GroupLayout(rightPanel2);
        rightPanel2.setLayout(rightPanel2Layout);
        rightPanel2Layout.setHorizontalGroup(
                rightPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 16, Short.MAX_VALUE)
        );
        rightPanel2Layout.setVerticalGroup(
                rightPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(leftPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(infoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(streamPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(rightPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(controlPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(rightPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE))))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(topPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 146, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(controlPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(rightPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(rightPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(topPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                .addComponent(streamPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                                                                .addComponent(infoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addComponent(leftPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1296, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>

    private void closeButtonMouseExited(java.awt.event.MouseEvent evt) {
        closeButton.setBackground(new java.awt.Color(207, 0, 15));
    }

    private void closeButtonMouseEntered(java.awt.event.MouseEvent evt) {
        closeButton.setBackground(new java.awt.Color(214, 69, 65));
    }

    private void closeButtonMouseClicked(java.awt.event.MouseEvent evt) {
        System.exit(0);
    }


    private void refreshButtonMouseClicked(java.awt.event.MouseEvent evt) {
        Actions.refresh(mediaPlayerComponent, rtsp_camera);
    }

    private void refreshButtonMouseEntered(java.awt.event.MouseEvent evt) {
        setHoverColor(refreshButton, true);
    }

    private void refreshButtonMouseExited(java.awt.event.MouseEvent evt) {
        setHoverColor(refreshButton, false);
    }


    private void switchCameraButtonMouseClicked(java.awt.event.MouseEvent evt) {
        this.dispose();
        Actions.switchCamera();
    }

    private void switchCameraButtonMouseEntered(java.awt.event.MouseEvent evt) {
        setHoverColor(switchCameraButton, true);
    }

    private void switchCameraButtonMouseExited(java.awt.event.MouseEvent evt) {
        setHoverColor(switchCameraButton, false);
    }


    private void upButtonMousePressed(java.awt.event.MouseEvent evt) {
        Actions.movement(3, 1);
    }

    private void upButtonMouseReleased(java.awt.event.MouseEvent evt) {
        Actions.movement(3, 0);
    }

    private void upButtonMouseEntered(java.awt.event.MouseEvent evt) {
        setHoverColor(upButton, true);
    }

    private void upButtonMouseExited(java.awt.event.MouseEvent evt) {
        setHoverColor(upButton, false);
    }


    private void leftButtonMousePressed(java.awt.event.MouseEvent evt) {
        Actions.movement(1, 1);
    }

    private void leftButtonMouseReleased(java.awt.event.MouseEvent evt) {
        Actions.movement(1, 0);
    }

    private void leftButtonMouseEntered(java.awt.event.MouseEvent evt) {
        setHoverColor(leftButton, true);
    }

    private void leftButtonMouseExited(java.awt.event.MouseEvent evt) {
        setHoverColor(leftButton, false);
    }


    private void downButtonMousePressed(java.awt.event.MouseEvent evt) {
        Actions.movement(4, 1);
    }

    private void downButtonMouseReleased(java.awt.event.MouseEvent evt) {
        Actions.movement(4, 0);
    }

    private void downButtonMouseEntered(java.awt.event.MouseEvent evt) {
        setHoverColor(downButton, true);
    }

    private void downButtonMouseExited(java.awt.event.MouseEvent evt) {
        setHoverColor(downButton, false);
    }


    private void rightButtonMousePressed(java.awt.event.MouseEvent evt) {
        Actions.movement(2, 1);
    }

    private void rightButtonMouseReleased(java.awt.event.MouseEvent evt) {
        Actions.movement(2, 0);
    }

    private void rightButtonMouseEntered(java.awt.event.MouseEvent evt) {
        setHoverColor(rightButton, true);
    }

    private void rightButtonMouseExited(java.awt.event.MouseEvent evt) {
        setHoverColor(rightButton, false);
    }

    private void listenButtonMouseExited(java.awt.event.MouseEvent evt) {
        setHoverColor(listenButton, false);
    }

    private void listenButtonMouseEntered(java.awt.event.MouseEvent evt) {
        setHoverColor(listenButton, true);
    }

    private void listenButtonMouseClicked(java.awt.event.MouseEvent evt) {
        if (listenState) {
            listenState = false;
            listenButton.setText("LISTEN: OFF");
            Actions.stopListening();
        } else {
            listenState = true;
            listenButton.setText("LISTEN: ON");
            Actions.startListening();
        }
    }

    private void speakButtonMouseClicked(java.awt.event.MouseEvent evt) {
        if (talkState) {
            talkState = false;
            speakButton.setText("SPEAK: OFF");
            Actions.stopTalking();
        } else {
            talkState = true;
            speakButton.setText("SPEAK: ON");
            Actions.startTalking();
        }
    }

    private void speakButtonMouseEntered(java.awt.event.MouseEvent evt) {
        setHoverColor(speakButton, true);
    }

    private void speakButtonMouseExited(java.awt.event.MouseEvent evt) {
        setHoverColor(speakButton, false);
    }


    private void alarmButtonMouseClicked(java.awt.event.MouseEvent evt) {
        if (alarmState) {
            alarmState = false;
            alarmButton.setText("ALARM: OFF");
            Actions.stopAlarm();
        } else {
            alarmState = true;
            alarmButton.setText("ALARM: ON");
            Actions.startAlarm();
        }
    }

    private void alarmButtonMouseEntered(java.awt.event.MouseEvent evt) {
        setHoverColor(alarmButton, true);
    }

    private void alarmButtonMouseExited(java.awt.event.MouseEvent evt) {
        setHoverColor(alarmButton, false);
    }


    private void babyButtonMouseClicked(java.awt.event.MouseEvent evt) {
        Actions.babySounds();
    }

    private void babyButtonMouseEntered(java.awt.event.MouseEvent evt) {
        setHoverColor(babyButton, true);
    }

    private void babyButtonMouseExited(java.awt.event.MouseEvent evt) {
        setHoverColor(babyButton, false);
    }


    private void screenshotButtonMouseClicked(java.awt.event.MouseEvent evt)  {
        String fileName = "src/Screenshots/" +
                new SimpleDateFormat("dd-MM-YYYY_HH.mm.ss"
                ).format(new Date()) + ".png";
        File file = new File(fileName);
        file.deleteOnExit();
        mediaPlayerComponent.mediaPlayer().snapshots().save(file);
    }

    private void screenshotButtonMouseEntered(java.awt.event.MouseEvent evt) {
        setHoverColor(screenshotButton, true);
    }

    private void screenshotButtonMouseExited(java.awt.event.MouseEvent evt) {
        setHoverColor(screenshotButton, false);
    }


    private void closeButton1MouseClicked(java.awt.event.MouseEvent evt) {
        setState(JFrame.ICONIFIED);
    }

    private void closeButton1MouseEntered(java.awt.event.MouseEvent evt) {
        setHoverColor(closeButton1, true);
    }

    private void closeButton1MouseExited(java.awt.event.MouseEvent evt) {
        setHoverColor(closeButton1, false);
    }

    private void setHoverColor(JLabel label, boolean hover) {
        if (hover) {
            label.setBackground(new java.awt.Color(84, 140, 185));
        } else {
            label.setBackground(new java.awt.Color(63, 114, 155));
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new GUI(new Device("1.1.1.1", "FF:FF:FF:FF:FF:FF")).setVisible(true);
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JLabel alarmButton;
    private javax.swing.JLabel babyButton;
    private javax.swing.JLabel closeButton;
    private javax.swing.JLabel closeButton1;
    private javax.swing.JPanel controlPanel;
    private javax.swing.JLabel downButton;
    private javax.swing.JPanel infoPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel labelIP;
    private javax.swing.JLabel labelMAC;
    private javax.swing.JLabel leftButton;
    private javax.swing.JPanel leftPanel;
    private javax.swing.JLabel listenButton;
    private javax.swing.JLabel refreshButton;
    private javax.swing.JLabel rightButton;
    private javax.swing.JPanel rightPanel;
    private javax.swing.JPanel rightPanel1;
    private javax.swing.JPanel rightPanel2;
    private javax.swing.JLabel screenshotButton;
    private javax.swing.JLabel speakButton;
    private javax.swing.JPanel streamPanel;
    private javax.swing.JLabel switchCameraButton;
    private javax.swing.JLabel toolName1;
    private javax.swing.JPanel topPanel;
    private javax.swing.JLabel upButton;
    // End of variables declaration
}
